@page "/"
@using Chirp.Infrastructure.DataModel
@using Microsoft.AspNetCore.Mvc.TagHelpers
@model Chirp.Razor.Pages.PublicModel
@inject SignInManager<Author> SignInManager
@inject UserManager<Author> UserManager
@{
    ViewData["Title"] = "Chirp!";
    Layout = "Shared/_Layout";
}

<div>
    <h2> Public Timeline </h2>

    @{
        ViewData["Title"] = "Public Timeline";
    }

    @* Check if the user is authenticated *@
    @if (User.Identity?.IsAuthenticated == true)
    {
        <div class="cheepbox">
            <h3>What's on your mind @(User.Identity.Name)?</h3>
            <form method="post" asp-page-handler="SendCheep">
                <div style="display: flex; align-items: center;">
                    <input type="text" asp-for="NewCheepText" maxlength="160" id="cheepText" oninput="checkCharacterLimit()"
                           style="flex-grow: 1; margin-right: 10px; padding: 5px; border: 1px solid #ccc; border-radius: 5px;">
                    <input type="submit" value="Share">
                </div>
                <span id="charLimitMessage" style="color: red; display: none;">You have reached the 160 character
                    limit!</span>
            </form>
        </div>
    }

    <script>
        // Function to check character limit for new cheep
        function checkCharacterLimit() {
            var cheepInput = document.getElementById("cheepText");
            var message = document.getElementById("charLimitMessage");
            if (cheepInput.value.length >= 160) {
                message.style.display = "inline";
            } else {
                message.style.display = "none";
            }
        }

        // Function to check character limit for editing cheep
        function checkEditLimit() {
            var cheepInput = document.getElementById("editText");
            var message = document.getElementById("charEditMessage");
            if (cheepInput.value.length >= 160) {
                message.style.display = "inline";
            } else {
                message.style.display = "none";
            }
        }

        // Function to toggle the edit field visibility
        function toggleEditField(cheepId) {
            var editField = document.getElementById("editField_" + cheepId);
            if (editField.style.display === "none") {
                editField.style.display = "block";
            } else {
                editField.style.display = "none";
            }
        }
    </script>

    @* Display the list of cheeps if there are any *@
    @if (Model.Cheeps.Any())
    {
        <ul id="messagelist" class="cheeps">
            @foreach (var cheep in Model.Cheeps)
            {
                <li style="border: 1px solid #ddd; padding: 10px; margin: 10px 0; overflow: hidden;">
                    <p>
                        <strong>
                            <a href="/@cheep.Author">@cheep.Author</a>
                            @* Show follow/unfollow button based on user's follow status *@
                            @if (User.Identity!.IsAuthenticated && User.Identity.Name != cheep.Author)
                            {
                                @if (!Model.FollowsAuthor(cheep.Author))
                                {
                                    <form asp-page-handler="Follow" method="post">
                                        <input type="hidden" name="authorName" value="@cheep.Author" />
                                        <button type="submit" class="btn btn-default">Follow</button>
                                    </form>
                                }
                                else
                                {
                                    <form asp-page-handler="Unfollow" method="post">
                                        <input type="hidden" name="authorName" value="@cheep.Author" />
                                        <button type="submit" class="btn btn-default">Unfollow</button>
                                    </form>
                                }
                            }
                            @* Show edit button if the user is the author or an admin *@
                            @if (User.Identity!.IsAuthenticated && (User.Identity.Name == cheep.Author || User.Identity.Name == "ADMIN"))
                            {
                                <button type="button" class="btn btn-default" onclick="toggleEditField('@cheep.CheepId')">Edit</button>
                            }
                        </strong>
                    <div id="editField_@cheep.CheepId" style="display: none;">
                        <form method="post" asp-page-handler="SubmitEdit">
                            <input type="text" name="text" value="@cheep.Text" id="editText" oninput="checkEditLimit()"
                                   maxlength="160">
                            <input type="hidden" name="cheep.CheepId" value="@cheep.CheepId">
                            <input type="submit" value="Save">
                            <input type="submit" asp-page-handler="DeleteCheep" asp-route-cheepId="@cheep.CheepId"
                                   class="btn btn-default" value="Delete">
                            <span id="charEditMessage"
                                  style="color: red; display: none;">You have reached the 160 character limit!</span>
                        </form>
                    </div>
                    @* Display image if the cheep contains a valid image URL *@
                    @if (cheep.IsImage)
                    {
                        var validImageExtensions = new[] { ".jpg", ".jpeg", ".png", ".gif", ".webp" };
                        var cleanUrl = cheep.Text.Split('?')[0]; // Remove query parameters
                        if (validImageExtensions.Any(ext => cleanUrl.EndsWith(ext, StringComparison.OrdinalIgnoreCase)))
                        {
                            <img src="@cleanUrl" alt="Image posted by @cheep.Author"
                                 style="max-width: 50%; height: 100%; border-radius: 5px; margin-top: 10px; display: block;" />
                        }
                        else
                        {
                            <p>@cheep.Text</p>
                        }
                    }
                    else
                    {
                        @cheep.Text
                    }
                    <small>&mdash; @cheep.TimeStamp.AddHours(1)</small>
                    @if (cheep.EditedTimeStamp.HasValue)
                    {
                        <small>(Edited: @cheep.EditedTimeStamp.Value.AddHours(1))</small>
                    }
                    </p>
                </li>
            }
        </ul>
    }
    else
    {
        <em>There are no more Cheeps to read.</em>
    }

</div>