name: .NET Release and Test Workflow

on:
  release:
    types: [published]
  workflow_dispatch:

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --no-restore

    - name: Install Playwright Browsers
      run: |
        pwsh ./test/PlaywrightTests/bin/Debug/net8.0/playwright.ps1 install

    - name: Install System Dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libnss3 libxss1 libasound2 libatk1.0-0 libcups2 libx11-xcb1 libxcomposite1 libxrandr2 libxdamage1 libgbm1 libgtk-3-0

    - name: Test
      run: dotnet test --no-build --verbosity normal
      env:
        authentication_github_clientid: ${{ secrets.authentication_github_clientid }}
        authentication_github_clientsecret: ${{ secrets.authentication_github_clientsecret }}

    - name: Publish Windows
      run: dotnet publish -r win-x64 -c Release

    - name: Publish Linux
      run: dotnet publish -r linux-x64 -c Release 

    - name: Publish macOS
      run: dotnet publish -r osx-x64 -c Release 

    - name: Zip Windows
      run: zip -r Windows.zip ./src/Chirp.CLI.Client/bin/Release/net8.0/win-x64/publish/*

    - name: Zip Linux
      run: zip -r Linux.zip ./src/Chirp.CLI.Client/bin/Release/net8.0/linux-x64/publish/*

    - name: Zip macOS
      run: zip -r MacOS.zip ./src/Chirp.CLI.Client/bin/Release/net8.0/osx-x64/publish/*

    - name: Publish Release Artifacts
      uses: softprops/action-gh-release@v2
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: |
          Windows.zip
          Linux.zip
          MacOS.zip

  # Job for Windows to run the .exe file with secrets
  run_windows:
    name: Run Windows Executable with Secrets
    runs-on: windows-latest
    needs: release
    steps:
    - name: Download Windows ZIP
      uses: actions/download-artifact@v3
      with:
        name: Windows.zip

    - name: Extract ZIP
      run: |
        mkdir extracted
        Expand-Archive -Path Windows.zip -DestinationPath extracted

    - name: Run .exe with secrets on Windows
      run: |
        $env:authentication_github_clientid = '${{ secrets.authentication_github_clientid }}'
        $env:authentication_github_clientsecret = '${{ secrets.authentication_github_clientsecret }}'
        Start-Process -FilePath "extracted/YourApp.exe" -Wait

  # Job for Linux to run the .exe file with secrets
  run_linux:
    name: Run Linux Executable with Secrets
    runs-on: ubuntu-latest
    needs: release
    steps:
    - name: Download Linux ZIP
      uses: actions/download-artifact@v3
      with:
        name: Linux.zip

    - name: Extract ZIP
      run: |
        mkdir extracted
        unzip Linux.zip -d extracted

    - name: Run .exe with secrets on Linux
      run: |
        export authentication_github_clientid=${{ secrets.authentication_github_clientid }}
        export authentication_github_clientsecret=${{ secrets.authentication_github_clientsecret }}
        ./extracted/YourApp # Adjust based on your actual executable's name

  # Job for macOS to run the .exe file with secrets
  run_macos:
    name: Run macOS Executable with Secrets
    runs-on: macos-latest
    needs: release
    steps:
    - name: Download macOS ZIP
      uses: actions/download-artifact@v3
      with:
        name: MacOS.zip

    - name: Extract ZIP
      run: |
        mkdir extracted
        unzip MacOS.zip -d extracted

    - name: Run .exe with secrets on macOS
      run: |
        export authentication_github_clientid=${{ secrets.authentication_github_clientid }}
        export authentication_github_clientsecret=${{ secrets.authentication_github_clientsecret }}
        ./extracted/YourApp # Adjust based on your actual executable's name
