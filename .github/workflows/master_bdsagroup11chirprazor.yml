name: Build and deploy ASP.Net Core app to Azure Web App - bdsagroup11chirprazor

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository's code
      - uses: actions/checkout@v4

      # Step 2: Set up .NET Core SDK (version 7.x)
      - name: Set up .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '7.x'

      # Step 3: Build and publish the app to an output directory
      - name: Build and publish app
        run: dotnet publish -c Release -o ${{ github.workspace }}/output

      # Step 4: Upload the published output as an artifact for deployment
      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: app-artifact
          path: ${{ github.workspace }}/output

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      id-token: write # This is required for requesting the JWT

    steps:
      # Step 1: Download the artifact from the build job
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: app-artifact

      # Step 2: Login to Azure using service principal credentials
      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_FB57BEE3841B4AB7BDB3E2ABEC5F53BE }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_D2B0AEC30EEC46888F9F45CE0444A8F1 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_82970DD98ABC452B80158EFA18934258 }}

      # Step 3: Deploy the downloaded artifact to Azure Web App
      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'bdsagroup11chirprazor'
          slot-name: 'Production'
          package: ./output
